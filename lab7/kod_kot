import cv2, math, numpy

def draw_line(rho, theta, img, color=(255, 255, 255), thickness = 15, lineType = cv2.LINE_AA):
    cos_t = math.cos(theta)
    sin_t = math.sin(theta)
    x0 = cos_t * rho
    y0 = sin_t * rho
    pt1 = int(x0 - 1000*sin_t), int(y0 - 1000*cos_t)
    pt2 = int(x0 + 1000*sin_t), int(y0 + 1000*cos_t)
    cv2.line(img, pt1, pt2, color, thickness, lineType)

pathImg = './Lab7/7_1.jpg'

img = cv2.imread(pathImg, flags=cv2.IMREAD_GRAYSCALE)
img_c = cv2.imread(pathImg, flags=cv2.IMREAD_COLOR)
height, weight = img.shape[0:2]
img = cv2.resize(img, (int(height*0.9), int(weight*0.9)))


grad_x = cv2.Sobel(img,  ddepth=0, dx=1, dy=0, ksize=3, scale=1, delta=0)
grad_y = cv2.Sobel(img,  ddepth=0, dx=0, dy=1, ksize=3, scale=1, delta=0)
new_img = grad_x+grad_y


img2 = cv2.morphologyEx(new_img, cv2.MORPH_CLOSE, kernel=numpy.ones((1, 1), dtype=int),
                           anchor=(-1, -1),
                           iterations=1,
                           borderType=cv2.BORDER_CONSTANT, borderValue=(
                               255, 255, 255),
                           )

lines = cv2.HoughLines(img2, rho = 1, theta = math.pi/180, threshold = 700, min_theta = None, max_theta = None)

for i in range(0, len(lines)):
    rho = lines[i][0][0]
    theta = lines[i][0][1]
    draw_line(rho, theta, img = img)

cv2.namedWindow("IMG", flags = cv2.WINDOW_AUTOSIZE)
cv2.imshow("IMG", img2)
key =cv2.waitKey()
cv2.namedWindow("IMG", flags = cv2.WINDOW_AUTOSIZE)
cv2.imshow("IMG", img)
key = cv2.waitKey()